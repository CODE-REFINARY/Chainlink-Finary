version: "3.9"
   
services:
  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5430:5432"
  django:
    build:
      dockerfile: Dockerfile.django
      context: .
    # The server will run on localhost:8000
    # below was legacy project settings when the files were segregated
    # command: python manage.py runserver 0.0.0.0:8000 --settings=Chainlink.settings.docker
    # command: bash -c "python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8000"
    command: ["bash", "django.sh"]
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - webpack
      - redis
  webpack:
    build:
      dockerfile: Dockerfile.webpack
      context: .
    working_dir: /code
    command: npm run dev
    volumes:
      - ./static/react/src:/code/static/react/src
      - ./static/react/static:/code/static/react/static
  redis:
    image: redis/redis-stack-server:7.2.0-v6
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - redis_data:/data
    command: bash -c "redis-server --appendonly yes --bind 0.0.0.0 --port 6379 --requirepass 123abc"
  dart-sass:
    #image: michalklempa/dart-sass:latest
    build:
      dockerfile: Dockerfile.dart-sass
      context: .
    platform: linux/amd64
    volumes:
      - ./static/sass:/sass
      - ./static/css:/css
    stdin_open: true  # Equivalent to -it (interactive)
    tty: true  # Keep the terminal open
    command: ["/opt/dart-sass/sass", "/sass/entrypoint.scss:/css/bulma.css", "--watch"]
volumes:
  redis_data:
  postgres_data:
